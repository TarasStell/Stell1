{% if section.settings.enabled %}
<script>
  window.onload = function() {
    if (typeof jQuery === 'undefined') {
        return;
    }

    announcementBar.init();
  }

  let announcementBar = (function() {
    let body = document.querySelector("body")
    let LINK = '{{ section.settings.banner_link }}', 
        $timer,
        $bar;

        console.log(body)

    function buildBar() {
      let $textContent = $('<div class="announcement-bar__text" />');
      let $container = $('<div class="container wrapper" />');
      $textContent.html('{{ section.settings.text }}');

      $bar = $('<div id="' + 'announcement-bar' + '" />')
      .css({
        'background': '{{ section.settings.background_color }}',
        'color': '{{ section.settings.text_color }}',
        'margin-top': '{{ section.settings.top_margin }}' + 'px'
      }).append($container);

      $container.append($textContent);

      if ({{ section.settings.timer_enabled }} &&
          new Date({{ section.settings.timer_date | json }}) instanceof Date &&
          !isNaN(new Date({{ section.settings.timer_date | json }}))) {
        $timer = $('<div class="announcement-bar__timer"/>');
        $container.append($timer);

        let timer = buildTimer($timer);

        if (timer === false) {
          return;
        }
      }

      $('body').prepend($bar);

      if (LINK.length) {
        $bar.wrap('<a href="' + LINK + '" class="announcement-bar__link" />');
      }
    }

    function buildTimer($timer) {
      let today = new Date().getTime();
      let endTime = new Date({{ section.settings.timer_date | json }}).setHours(0, 0, 0, 0);
      let diff = endTime - today;

      if (diff > 0) {
        let timer = setInterval((function tick() {
          let now = new Date().getTime(),
              distance = (endTime - now),
              days = Math.floor(distance / (1000 * 60 * 60 * 24)),
              hours = ('00' + Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))).slice(-2),
              minutes = ('00' + Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))).slice(-2),
              seconds = ('00' + Math.floor((distance % (1000 * 60)) / 1000)).slice(-2);

          if (distance < 0) {
            clearInterval(timer);

            return null;
          }

          $timer.html(
                      '<span class="announcement-bar__timer__value">' + 
                            '<span class="announcement-bar__timer__digit">' + days + '</span>' + 
                            '<span class="announcement-bar__timer__label">Days</span>' + 
                      '</span>' + 
                      '<span class="announcement-bar__timer__value">' + 
                            '<span class="announcement-bar__timer__digit">' + hours + '</span>' + 
                            '<span class="announcement-bar__timer__label">Hours</span>' + 
                      '</span>' + 
                      '<span class="announcement-bar__timer__value">' + 
                            '<span class="announcement-bar__timer__digit">' + minutes + '</span>' + 
                            '<span class="announcement-bar__timer__label">Minutes</span>' +
                      '</span>' + 
                      '<span class="announcement-bar__timer__value">' + 
                            '<span class="announcement-bar__timer__digit">' + seconds + '</span>' + 
                            '<span class="announcement-bar__timer__label">Seconds</span>' + 
                      '</span>'
                    );

          return tick;
        })(), 1000);
      } else {
        return false;
      }
    }

    function init() {
      buildBar();
    }

    return {
      init: init
    }
  })();
</script>


{% style %}
    #announcement-bar {
      padding: 10px;
      text-align: center;
      line-height: 1.5;
      display: flex;
      align-items: center; 
    }

    .wrapper {
      display: flex;
    align-items: center;
    }

    .container {
      width: 1440px;
      margin:0 auto;
    }

    .announcement-bar__link {
      text-decoration: none;
      color: {{ section.settings.text_color }};
    }

    .announcement-bar__text {
      width: 100%;
    }

    .announcement-bar__text a:link,
    .announcement-bar__text a:visited {
      text-decoration: underline;
      color: {{ section.settings.text_color }};
    }

    .announcement-bar__timer {
   
      display: flex;
      margin-left: 15px;
    }

    .announcement-bar__timer__value {
      padding: 5px;
      border-radius: 3px;
      background: {{ section.settings.background_color | color_darken: 10 }};
      transition-duration: 0.3s;
    }

    .announcement-bar__timer__value:hover {
      box-shadow: 5px 3px 3px rgb(94, 94, 94);
    }

    .announcement-bar__timer__value:not(:last-child) {
      margin-right: 5px;
    }

    .announcement-bar__timer__digit {
      color: {{ section.settings.text_color }};
      display: block;
      font-size: 18px;
      font-weight: bold;
      line-height: 1;
      margin-bottom: 5px;
    }

    .announcement-bar__timer__label {
      display: block;
      font-size: 12px;
      font-weight: light;
      text-transform: uppercase;
      line-height: 1;
    }

    @media screen and (max-width: 749px) {
      #announcement-bar {
       flex-direction: column;
      }

      .mw-announcement-bar__timer {
        margin-top: 10px;
        margin-left: 0;
      }
    }
{% endstyle %}

{% endif %}


{% schema %}
{
  "name": "Announcement bar Timer",
  "tag": "section",
  "settings": [
    {
       "type": "checkbox",
       "id": "enabled",
       "default": false,
       "label": "Enable announcement bar"
    },
    {
       "type": "textarea",
       "id": "text",
       "default": "Hello",
       "label": "Text"
    },
    {
       "type": "color",
       "id": "background_color",
       "label": "Background color",
       "default": "#d62020"
    },
    {
       "type": "color",
       "id": "text_color",
       "label": "Text color",
       "default": "#ffffff"
    },
  {
      "id": "banner_link",
      "type": "url",
      "label": "Banner link"
    },
  {
       "type": "number",
       "id": "top_margin",
       "default": 0,
       "label": "Top margin (px)"
    },
  {
       "type": "header",
       "content": "Countdown timer"
    },
  {
       "type": "checkbox",
       "id": "timer_enabled",
       "default": false,
       "label": "Enable countdown timer"
    },
    {
       "type": "text",
       "id": "timer_date",
       "label": "Expiration date",
   "info": "Format: YYYY-MM-DD"
    }
   
  ]
}
{% endschema %}